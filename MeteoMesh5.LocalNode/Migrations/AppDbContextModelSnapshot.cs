// <auto-generated />
using System;
using MeteoMesh5.LocalNode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeteoMesh5.LocalNode.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("MeteoMesh5.LocalNode.Models.CommandLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommandId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("TEXT");

                    b.Property<double>("NumericValue")
                        .HasColumnType("REAL");

                    b.Property<string>("TargetStationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommandId")
                        .IsUnique();

                    b.ToTable("CommandLogs");
                });

            modelBuilder.Entity("MeteoMesh5.LocalNode.Models.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Aux1")
                        .HasColumnType("REAL");

                    b.Property<double>("Aux2")
                        .HasColumnType("REAL");

                    b.Property<bool>("Flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Quality")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("StationId", "Timestamp");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("MeteoMesh5.LocalNode.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("IntervalMinutes")
                        .HasColumnType("REAL");

                    b.Property<bool>("LastFlag")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<double?>("LastValue")
                        .HasColumnType("REAL");

                    b.Property<string>("StationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suspended")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StationId")
                        .IsUnique();

                    b.ToTable("Stations");
                });
#pragma warning restore 612, 618
        }
    }
}
